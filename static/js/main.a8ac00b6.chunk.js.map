{"version":3,"sources":["Components/Cell.jsx","Components/Board.jsx","App.js","index.js"],"names":["Cell","handleCellClick","evt","props","cellClick","x","y","lit","this","className","onClick","Component","Board","state","cells","handleStart","numMoves","hasWon","inBounds","rows","cols","newCells","map","row","slice","won","moves","setState","number","Math","floor","random","chance","push","boardCells","winner","defaultProps","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8ac00b6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport \"../Styles/Cell.css\";\n\nclass Cell extends Component {\n\n    handleCellClick = (evt) => {\n        this.props.cellClick(this.props.x, this.props.y);\n    }\n\n    render(){\n        const { lit } = this.props;\n        return(\n            <td \n                className={(lit ? \"Cell-lit\" : \"Cell\")}\n                onClick={this.handleCellClick}\n            >\n            </td>\n        )\n    }\n}\n\nexport default Cell;","import React, { Component } from 'react';\nimport \"../Styles/Board.css\";\nimport Cell from './Cell';\n\nclass Board extends Component {\n    static defaultProps = {\n        rows: 5,\n        cols: 5,\n        chance: .25\n    }\n\n    state = {\n        cells: this.handleStart(),\n        numMoves: 0,\n        hasWon: false,\n    }\n\n    handleStart() {\n        let cells = []\n\n        for(let x = 0; x < this.props.rows; x++){\n            let row = [];\n\n            for(let y = 0; y < this.props.cols; y++){\n                let number = Math.floor(Math.random() * (100) + 1);\n                let lit = (this.props.chance * 100 >= number ? true : false);\n                row.push(lit);\n            }\n            cells.push(row);\n        }\n\n        return cells;\n    }\n\n    inBounds = (x, y) =>{\n        if(x < 0 || x >= this.props.rows) return false;\n        if(y < 0 || y >= this.props.cols) return false;\n\n        return true;\n    }\n\n    cellClick = (x, y) => {\n        let newCells = this.state.cells.map(row => {\n            return row.slice();\n        });\n        let won = true;\n        let moves = this.state.numMoves;\n\n        if(newCells[x][y] === true){\n            newCells[x][y] = !newCells[x][y];\n\n            if(this.inBounds(x-1, y)){\n                newCells[x-1][y] = !newCells[x-1][y]\n            }\n            if(this.inBounds(x+1, y)){\n                newCells[x+1][y] = !newCells[x+1][y]\n            }\n            if(this.inBounds(x, y-1)){\n                newCells[x][y-1] = !newCells[x][y-1]\n            }\n            if(this.inBounds(x, y+1)){\n                newCells[x][y+1] = !newCells[x][y+1]\n            }\n\n            moves++;\n        }\n\n        for(let row of newCells){\n            for(let col of row){\n                if(col){\n                    won = false;\n                }\n            }\n        }\n\n        this.setState({\n            cells: newCells.map(row => {\n                return row.slice();\n            }),\n            numMoves: moves,\n            hasWon: won,  \n        });\n    }\n\n    render(){\n        let boardCells = [];\n        let winner = <div className=\"Board-progress\">\n                        <h1>Number of moves: {this.state.numMoves}</h1>\n                     </div>;\n\n        for(let x = 0; x < this.props.rows; x++){\n            let row = [];\n\n            for(let y = 0; y < this.props.cols; y++){\n                row.push(<Cell lit={this.state.cells[x][y]} x={x} y={y} cellClick={this.cellClick}/>);\n            }\n\n            boardCells.push(<tr>{row}</tr>);\n        }\n\n        if(this.state.hasWon){\n            winner = <div className=\"Board-winner\">\n                        <h1>You've won! Number of moves: {this.state.numMoves}</h1>\n                     </div>\n        }\n\n        return(\n            <div className=\"Board\">\n                <h1 className=\"Board-title\">Lights Out!</h1>\n                <table className=\"Board-table\">\n                    <tbody>{boardCells}</tbody>\n                </table>\n                {winner}\n            </div>\n        )\n    }\n}\n\nexport default Board;","import './App.css';\nimport Board from \"./Components/Board\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}